version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  neo4j:
    image: neo4j:5-enterprise
    container_name: neo4j
    environment:
      NEO4J_AUTH: neo4j/neo4jpassword
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  asset_discovery:
    build: ./sensors/asset_discovery
    container_name: asset_discovery
    environment:
      NETWORK_RANGE: "192.168.1.0/24"
      SCAN_INTERVAL_SECONDS: 900
      KAFKA_BOOTSTRAP: "kafka:9092"
      KAFKA_TOPIC: "asset.discovery"
    depends_on:
      - kafka
    # Uncomment to run interactively for debugging
    # stdin_open: true
    # tty: true

  topology_updater:
    build: ./services/topology_updater
    container_name: topology_updater
    environment:
      KAFKA_BOOTSTRAP: "kafka:9092"
      KAFKA_TOPIC: "asset.discovery"
      NEO4J_URI: "bolt://neo4j:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "neo4jpassword"
    depends_on:
      - kafka
      - neo4j

  traffic_analysis:
    build: ./sensors/traffic_analysis
    container_name: traffic_analysis
    environment:
      INTERFACE: "eth0"
      FLOW_WINDOW_SECONDS: 30
      KAFKA_BOOTSTRAP: "kafka:9092"
      KAFKA_TOPIC: "netflow"
    depends_on:
      - kafka
    network_mode: "host"

volumes:
  neo4j_data: